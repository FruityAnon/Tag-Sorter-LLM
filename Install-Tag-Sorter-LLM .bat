@echo off
:: –í–º–∏–∫–∞—î–º–æ –∫–æ–¥–æ–≤—É —Å—Ç–æ—Ä—ñ–Ω–∫—É –¥–ª—è –∫–æ—Ä–µ–∫—Ç–Ω–æ–≥–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Å–∏–º–≤–æ–ª—ñ–≤
chcp 65001 > nul
:: –í–º–∏–∫–∞—î–º–æ –≤—ñ–¥–∫–ª–∞–¥–µ–Ω–µ —Ä–æ–∑—à–∏—Ä–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–∏—Ö, –Ω–µ–æ–±—Ö—ñ–¥–Ω–µ –¥–ª—è —Ü–∏–∫–ª—ñ–≤
setlocal enabledelayedexpansion

echo ===============================================================
echo  Tag Sorter LLM - Smart Dependency Installer
echo ===============================================================
echo.

:: --- –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑–º—ñ–Ω–Ω–∏—Ö ---
set "PYTHON_EXE=%~dp0python_embeded\python.exe"
set "TARGET_FOLDER=ComfyUI\custom_nodes\Tag-Sorter-LLM"
set "ALL_DEPS_INSTALLED=true"
set "PACKAGES_TO_CHECK=cmake ninja scikit-build-core llama-cpp-python huggingface-hub packaging requests hf_xet"

:: --- –ö—Ä–æ–∫ 1: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ –≤—Å—ñ—Ö –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π ---
echo [Step 1/4] Checking for all required dependencies...
for %%p in (%PACKAGES_TO_CHECK%) do (
    echo   - Checking for %%p...
    call "%PYTHON_EXE%" -m pip show %%p > nul 2>&1
    if !errorlevel! neq 0 (
        echo     -> ‚ö†Ô∏è Not found.
        set "ALL_DEPS_INSTALLED=false"
    ) else (
        echo     -> ‚úÖ Found.
    )
)

:: --- –£–º–æ–≤–Ω–∏–π –ø–µ—Ä–µ—Ö—ñ–¥: —è–∫—â–æ –≤—Å–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ, –∑–∞–≤–µ—Ä—à—É—î–º–æ —Ä–æ–±–æ—Ç—É ---
if "!ALL_DEPS_INSTALLED!"=="true" (
    echo.
    echo ‚úÖ All dependencies are already installed. Nothing to do.
    goto :success_end
)

echo.
echo ‚ö†Ô∏è Some dependencies are missing. Proceeding with installation...
echo.


:: --- –ö—Ä–æ–∫ 2: –ö–ª–æ–Ω—É–≤–∞–Ω–Ω—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ—é (—è–∫—â–æ –π–æ–≥–æ –Ω–µ–º–∞—î) ---
echo [Step 2/4] Checking repository...
if exist "%TARGET_FOLDER%\.git" (
    echo üìÅ Repository already exists.
) else (
    echo üì• Cloning repository...
    git clone https://github.com/FruityAnon/Tag-Sorter-LLM.git "%TARGET_FOLDER%"
    if %errorlevel% neq 0 (
        echo ‚ùå Failed to clone repository! Please check your internet connection and Git installation.
        goto :fail_end
    )
)
echo ‚úÖ Repository check complete.
echo.

:: --- –ö—Ä–æ–∫ 3: –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –±–∞–∑–æ–≤–∏—Ö –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π ---
echo [Step 3/4] Installing base dependencies (pip will skip installed ones)...
call "%PYTHON_EXE%" -m pip install huggingface-hub>=0.20.0 packaging>=24.0 requests>=2.32.3 hf_xet cmake ninja scikit-build-core
if %errorlevel% neq 0 (
    echo ‚ùå Failed to install base dependencies!
    goto :fail_end
)
echo ‚úÖ Base dependencies are up to date.
echo.

:: --- –ö—Ä–æ–∫ 4: –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è llama-cpp-python (—Ç—ñ–ª—å–∫–∏ —è–∫—â–æ –π–æ–≥–æ –Ω–µ –±—É–ª–æ) ---
echo [Step 4/4] Installing and compiling llama-cpp-python...
echo This may take a long time (5-15 minutes). Please be patient.
echo.

echo ---> Attempting installation with modern CUDA flag (GGML_CUDA)...
set CMAKE_ARGS=-DGGML_CUDA=on
call "%PYTHON_EXE%" -m pip install --upgrade --force-reinstall --no-cache-dir llama-cpp-python>=0.2.79

if %errorlevel% neq 0 (
    echo.
    echo ---> Modern flag failed. Retrying with legacy CUDA flag (LLAMA_CUBLAS)...
    set CMAKE_ARGS=-DLLAMA_CUBLAS=on
    call "%PYTHON_EXE%" -m pip install --upgrade --force-reinstall --no-cache-dir llama-cpp-python>=0.2.79
    
    if %errorlevel% neq 0 (
        echo ‚ùå Critical Error: Failed to install llama-cpp-python.
        echo Please check if you have Microsoft C++ Build Tools installed.
        goto :fail_end
    )
)
echo ‚úÖ llama-cpp-python installed successfully!
echo.

:success_end
echo ===============================================================
echo  All dependencies are configured successfully!
echo  You can now launch ComfyUI.
echo ===============================================================
echo.
pause
exit /b 0

:fail_end
echo ‚ùå Installation failed. Please check the error messages above.
echo.
pause
exit /b 1